- name: Run Setup Script on VM
        uses: azure/CLI@v1
        with:
          inlineScript: |
            # Get the download URLs for the artifacts
            BACKEND_URL=$(curl -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" -H "Accept: application/vnd.github.v3+json" "https://api.github.com/repos/${{ github.repository }}/actions/artifacts" | jq '.artifacts[] | select(.name == "${{ env.BACKEND_ARTIFACT_NAME }}") | .archive_download_url')
            FRONTEND_URL=$(curl -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" -H "Accept: application/vnd.github.v3+json" "https://api.github.com/repos/${{ github.repository }}/actions/artifacts" | jq '.artifacts[] | select(.name == "${{ env.FRONTEND_ARTIFACT_NAME }}") | .archive_download_url')
            # Run the deployment script on the VM
            az vm run-command invoke \
              -g ${{ env.AZURE_RESOURCE_GROUP }} \
              -n ${{ env.AZURE_VM_NAME }} \
              --command-id RunShellScript \
              --parameters \
                "ServiceBusConnection=${{ secrets.SERVICEBUS_CONNECTION }}" \
                "PublishTopic=${{ secrets.PUBLISH_TOPIC }}" \
                "ScheduleTopic=${{ secrets.SCHEDULE_TOPIC }}" \
              --scripts "
                #!/bin/bash
                set -e # Exit immediately if a command exits with a non-zero status.
                # Install dependencies
                sudo apt-get update && sudo apt-get install -y dotnet-runtime-8.0 nginx unzip jq
                # Download artifacts
                sudo wget -O /tmp/backend.zip \$${BACKEND_URL//\"/}
                sudo wget -O /tmp/frontend.zip \$${FRONTEND_URL//\"/}
                # Prepare directories
                sudo rm -rf /var/www/*
                sudo mkdir -p /var/www/backend /var/www/frontend
                # Unzip artifacts
                sudo unzip -o /tmp/backend.zip -d /var/www/backend
                sudo unzip -o /tmp/frontend.zip -d /var/www/frontend
                
                # --- FIX #1: Removed the dynamic DLL finder ---
                
                # Create backend service file
                echo \"[Unit]
                Description=Service Bus API Backend
                [Service]
                WorkingDirectory=/var/www/backend
                
                # --- FIX #1: Hardcoded the correct DLL name ---
                ExecStart=/usr/bin/dotnet /var/www/backend/servicebusapi2.dll
                
                Restart=always
                User=www-data
                Environment=ASPNETCORE_ENVIRONMENT=Production
                Environment=ASPNETCORE_URLS=http://localhost:5000
                Environment=\\\"SERVICEBUS_CONNECTION=$1\\\"
                Environment=\\\"PUBLISH_TOPIC=$2\\\"
                Environment=\\\"SCHEDULE_TOPIC=$3\\\"
                Environment=\\\"AngularAppUrl=http://\$(curl -s ifconfig.me)\\\"
                [Install]
                WantedBy=multi-user.target\" | sudo tee /etc/systemd/system/servicebusapi.service
                # Create nginx config file
                echo 'server {
                      listen 80;
                      server_name _;
                      
                      # --- FIX #2: Changed root path back to /var/www/frontend ---
                      root /var/www/frontend;
                      
                      index index.html;
                      location / {
                          try_files \\\$uri \\\$uri/ /index.html;
                      }
                      location /api {
                          proxy_pass http://localhost:5000;
                          proxy_http_version 1.1;
                          proxy_set_header Upgrade \\\$http_upgrade;
                          proxy_set_header Connection keep-alive;
                          proxy_set_header Host \\\$host;
                          proxy_cache_bypass \\\$http_upgrade;
                          proxy_set_header X-Forwarded-For \\\$proxy_add_x_forwarded_for;
                          proxy_set_header X-Forwarded-Proto \\\$scheme;
                      }
                }' | sudo tee /etc/nginx/sites-available/default
                # Set permissions and restart services
                sudo chown -R www-data:www-data /var/www
                sudo systemctl daemon-reload
                sudo systemctl enable servicebusapi.service
                sudo systemctl restart servicebusapi.service
                sudo systemctl restart nginx
              "
